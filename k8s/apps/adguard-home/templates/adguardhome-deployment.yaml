apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    gethomepage.dev/description: Ad blocker and DNS server
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Network
    gethomepage.dev/icon: adguard-home.png
    gethomepage.dev/name: Adguard Home
    gethomepage.dev/pod-selector: ""
    kompose.cmd: kompose convert --chart
    kompose.service.expose: guard.mdeleon.dev
    kompose.service.expose.tls-secret: adguard-tls-cert
    kompose.service.type: clusterip
    kompose.version: 1.31.2 (HEAD)
    kompose.volume.size: 4Gi
  creationTimestamp: null
  labels:
    io.kompose.service: adguardhome
  name: adguardhome
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: adguardhome
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/description: Ad blocker and DNS server
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Network
        gethomepage.dev/icon: adguard-home.png
        gethomepage.dev/name: Adguard Home
        gethomepage.dev/pod-selector: ""
        kompose.cmd: kompose convert --chart
        kompose.service.expose: guard.mdeleon.dev
        kompose.service.expose.tls-secret: adguard-tls-cert
        kompose.service.type: clusterip
        kompose.version: 1.31.2 (HEAD)
        kompose.volume.size: 4Gi
      creationTimestamp: null
      labels:
        io.kompose.network/adguard-default: "true"
        io.kompose.service: adguardhome
    spec:
      containers:
        - image: adguard/adguardhome:latest
          name: adguardhome
          ports:
            - containerPort: 53
              hostPort: 53
              protocol: TCP
            - containerPort: 53
              hostPort: 53
              protocol: UDP
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /opt/adguardhome
              name: adguard
      restartPolicy: Always
      volumes:
        - name: adguard
          persistentVolumeClaim:
            claimName: adguard
status: {}
