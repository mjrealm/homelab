---
app-template:
  defaultPodOptions:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - adguard-home
            topologyKey: "kubernetes.io/hostname"

  controllers:
    main:
      strategy: Recreate
      containers:
        main:
          nameOverride: adguard-primary
          image:
            repository: adguard/adguardhome
            tag: v0.107.44
    secondary:
      strategy: Recreate
      containers:
        main:
          nameOverride: adguard-secondary
          image:
            repository: adguard/adguardhome
            tag: v0.107.44
  service:
    main:
      type: LoadBalancer
      loadBalancerIP: 192.168.10.201
      controller: main
      ports:
        http:
          protocol: HTTP
          port: 80
        http-web:
          protocol: HTTP
          port: 3000
        dns-tcp:
          protocol: TCP
          port: 53
        dns-udp:
          protocol: UDP
          port: 53
    secondary:
      type: LoadBalancer
      loadBalancerIP: 192.168.10.202
      controller: secondary
      ports:
        http:
          protocol: HTTP
          port: 80
        http-web:
          protocol: HTTP
          port: 3000
        dns-tcp:
          protocol: TCP
          port: 53
        dns-udp:
          protocol: UDP
          port: 53

  ingress:
    primary:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/name: Adguard Home (Primary)
        gethomepage.dev/description: Ad blocker and DNS server
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Network
        gethomepage.dev/icon: adguard-home.png
        gethomepage.dev/pod-selector: ""
        gethomepage.dev/weight: "1"
      hosts:
        - host: &primary guard1.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
        - secretName: adguard-primary-tls-cert
          hosts:
            - *primary
    secondary:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/name: Adguard Home (Secondary)
        gethomepage.dev/description: Ad blocker and DNS server
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Network
        gethomepage.dev/icon: adguard-home.png
        gethomepage.dev/pod-selector: ""
        gethomepage.dev/weight: "2"
      hosts:
        - host: &secondary guard2.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: secondary
                port: http
      tls:
        - secretName: adguard-secondary-tls-cert
          hosts:
            - *secondary

  persistence:
    work-primary:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 200Mi
      advancedMounts:
        main:
          main:
            - path: /opt/adguardhome/work
    work-secondary:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 200Mi
      advancedMounts:
        secondary:
          main:
            - path: /opt/adguardhome/work
    config-primary:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 100Mi
      advancedMounts:
        main:
          main:
            - path: /opt/adguardhome/conf
    config-secondary:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 100Mi
      advancedMounts:
        secondary:
          main:
            - path: /opt/adguardhome/conf
