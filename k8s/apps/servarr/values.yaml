---
app-template:
  controllers:
    main:
      strategy: Recreate
      containers:
        main:
          nameOverride: sonarr
          image:
            repository: lscr.io/linuxserver/sonarr
            tag: latest
          env:
            TZ: "America/Los_Angeles"
            PUID: "1000"
            PGID: "1000"
        radarr:
          image:
            repository: lscr.io/linuxserver/radarr
            tag: latest
          env:
            TZ: "America/Los_Angeles"
            PUID: "1000"
            PGID: "1000"
        whisparr:
          image:
            repository: ghcr.io/hotio/whisparr
            tag: latest
          env:
            TZ: "America/Los_Angeles"
            PUID: "1000"
            PGID: "1000"
            UMASK: "002"
    nzbget:
      strategy: Recreate
      containers:
        main:
          image:
            repository: lscr.io/linuxserver/nzbget
            tag: latest
          env:
            TZ: "America/Los_Angeles"
            PUID: "1000"
            PGID: "1000"

  service:
    main:
      ports:
        http:
          port: 8989
        http-radarr:
          port: 7878
        http-whisparr:
          port: 6969
    nzbget:
      controller: nzbget
      ports:
        http:
          port: 6789

  ingress:
    sonarr:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: Sonarr
        gethomepage.dev/description: TV Show Library Manager
        gethomepage.dev/group: Media
        gethomepage.dev/icon: sonarr.png
        gethomepage.dev/pod-selector: ""
        nginx.ingress.kubernetes.io/proxy-body-size: 24m
      hosts:
        - host: &sonarr sonarr.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
        - secretName: sonarr-tls-cert
          hosts:
            - *sonarr
    radarr:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: Radarr
        gethomepage.dev/description: Movie Library Manager
        gethomepage.dev/group: Media
        gethomepage.dev/icon: radarr.png
        gethomepage.dev/pod-selector: ""
        nginx.ingress.kubernetes.io/proxy-body-size: 24m
      hosts:
        - host: &radarr radarr.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http-radarr
      tls:
        - secretName: radarr-tls-cert
          hosts:
            - *radarr
    whisparr:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: Whisparr
        gethomepage.dev/description: Random Media Manager
        gethomepage.dev/group: Media
        gethomepage.dev/icon: whisparr.png
        gethomepage.dev/pod-selector: ""
      hosts:
        - host: &whisparr whisparr.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http-whisparr
      tls:
        - secretName: whisparr-tls-cert
          hosts:
            - *whisparr
    nzbget:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: NZBGet
        gethomepage.dev/description: Media Downloader
        gethomepage.dev/group: Media
        gethomepage.dev/icon: nzbget.png
        gethomepage.dev/pod-selector: ""
      hosts:
        - host: &nzbget nzbget.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: nzbget
                port: http
      tls:
        - secretName: nzbget-tls-cert
          hosts:
            - *nzbget

  persistence:
    config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 4Gi
      retain: true
      advancedMounts:
        main:
          main:
            - path: /config
              subPath: sonarr
          radarr:
            - path: /config
              subPath: radarr
          whisparr:
            - path: /config
              subPath: whisparr
        nzbget:
          main:
            - path: /config
              subPath: nzbget

    media-downloads:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 120Gi
      globalMounts:
        - path: /downloads
