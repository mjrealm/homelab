---
app-template:
  defaultPodOptions:
    enableServiceLinks: true
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - wayne

  controllers:
    servarr:
      replicas: 1
      strategy: Recreate
      containers:
        sonarr:
          image:
            repository: lscr.io/linuxserver/sonarr
            tag: 4.0.9
          env:
            TZ: "America/Los_Angeles"
            PUID: "1000"
            PGID: "1000"
        radarr:
          image:
            repository: lscr.io/linuxserver/radarr
            tag: 5.10.1-develop
          env:
            TZ: "America/Los_Angeles"
            PUID: "1000"
            PGID: "1000"
        lidarr:
          image:
            repository: lscr.io/linuxserver/lidarr
            tag: 2.5.3
          env:
            TZ: "America/Los_Angeles"
            PUID: "1000"
            PGID: "1000"
        prowlarr:
          image:
            repository: lscr.io/linuxserver/prowlarr
            tag: 1.23.1
          env:
            TZ: "America/Los_Angeles"
            PUID: "1000"
            PGID: "1000"
        sabnzbd:
          image:
            repository: lscr.io/linuxserver/sabnzbd
            tag: 4.3.3
          env:
            PUID: "1000"
            PGID: "1000"
            TZ: "America/Los_Angeles"

    filebrowser:
      replicas: 1
      strategy: Recreate
      containers:
        main:
          image:
            repository: filebrowser/filebrowser
            tag: v2.31.1
          env:
            PUID: "1000"
            PGID: "1000"

  service:
    servarr:
      controller: servarr
      ports:
        http:
          port: 8989
        http-radarr:
          port: 7878
        http-lidarr:
          port: 8686
        http-prowlarr:
          port: 9696
        http-sabnzbd:
          port: 8080
    filebrowser:
      controller: filebrowser
      ports:
        http:
          port: 80

  ingress:
    sonarr:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: Sonarr
        gethomepage.dev/description: TV Show Library Manager
        gethomepage.dev/group: Servarr
        gethomepage.dev/icon: sonarr.png
        gethomepage.dev/pod-selector: ""
        gethomepage.dev/weight: "1"
        nginx.ingress.kubernetes.io/proxy-body-size: 24m
      hosts:
        - host: &sonarr sonarr.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: servarr
                port: http
      tls:
        - secretName: sonarr-tls-cert
          hosts:
            - *sonarr
    radarr:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: Radarr
        gethomepage.dev/description: Movie Library Manager
        gethomepage.dev/group: Servarr
        gethomepage.dev/icon: radarr.png
        gethomepage.dev/pod-selector: ""
        gethomepage.dev/weight: "2"
        nginx.ingress.kubernetes.io/proxy-body-size: 24m
      hosts:
        - host: &radarr radarr.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: servarr
                port: http-radarr
      tls:
        - secretName: radarr-tls-cert
          hosts:
            - *radarr
    lidarr:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: Lidarr
        gethomepage.dev/description: Music Library Manager
        gethomepage.dev/group: Servarr
        gethomepage.dev/icon: lidarr.png
        gethomepage.dev/pod-selector: ""
        gethomepage.dev/weight: "3"
        nginx.ingress.kubernetes.io/proxy-body-size: 24m
      hosts:
        - host: &lidarr lidarr.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: servarr
                port: http-lidarr
      tls:
        - secretName: lidarr-tls-cert
          hosts:
            - *lidarr
    prowlarr:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: Prowlarr
        gethomepage.dev/description: Indexer Manager
        gethomepage.dev/group: Servarr
        gethomepage.dev/icon: prowlarr.png
        gethomepage.dev/pod-selector: ""
        gethomepage.dev/weight: "4"
        nginx.ingress.kubernetes.io/proxy-body-size: 24m
      hosts:
        - host: &prowlarr prowlarr.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: servarr
                port: http-prowlarr
      tls:
        - secretName: prowlarr-tls-cert
          hosts:
            - *prowlarr
    prowlarr-api:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 24m
      hosts:
        - host: &prowlarr prowlarr.mdeleon.dev
          paths:
            - path: /api
              pathType: Prefix
              service:
                identifier: servarr
                port: http-prowlarr
      tls:
        - secretName: prowlarr-tls-cert
          hosts:
            - *prowlarr
    filebrowser:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: File Browser
        gethomepage.dev/description: File Browser for Downloads
        gethomepage.dev/group: Servarr
        gethomepage.dev/icon: filebrowser.png
        gethomepage.dev/pod-selector: ""
        gethomepage.dev/weight: "7"
      hosts:
        - host: &filebrowser media-fb.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: filebrowser
                port: http
      tls:
        - secretName: filebrowser-tls-cert
          hosts:
            - *filebrowser
    sabnzbd:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: SABnzbd
        gethomepage.dev/description: DL client
        gethomepage.dev/group: Servarr
        gethomepage.dev/icon: sabnzbd.png
        gethomepage.dev/pod-selector: ""
        gethomepage.dev/weight: "5"
      hosts:
        - host: &sabnzbd media-dl.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: servarr
                port: http-sabnzbd
      tls:
        - secretName: sabnzbd-tls-cert
          hosts:
            - *sabnzbd

  persistence:
    config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 4Gi
      retain: false
      advancedMounts:
        servarr:
          sonarr:
            - path: /config
              subPath: sonarr
          radarr:
            - path: /config
              subPath: radarr
          lidarr:
            - path: /config
              subPath: lidarr
          prowlarr:
            - path: /config
              subPath: prowlarr
          sabnzbd:
            - path: /config
              subPath: sabnzbd
        filebrowser:
          main:
            - path: /config
              subPath: filebrowser
            - path: /srv/config

    media-incomplete:
      enabled: true
      type: emptyDir
      advancedMounts:
        servarr:
          sabnzbd:
            - path: incomplete-downloads

    media-downloads:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 150Gi
      globalMounts:
        - path: /downloads
      advancedMounts:
        filebrowser:
          main:
            - path: /srv/downloads

    media-nfs:
      enabled: true
      type: nfs
      server: 192.168.1.200
      path: /volume1/media/

    filebrowser-db:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 100Mi
      advancedMounts:
        filebrowser:
          main:
            - path: /database
