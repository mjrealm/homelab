---
app-template:
  defaultPodOptions:
    enableServiceLinks: true

  controllers:
    paperless:
      containers:
        paperless:
          nameOverride: paperless-ngx
          image:
            repository: ghcr.io/paperless-ngx/paperless-ngx
            tag: 2.17.1
          env:
            PAPERLESS_CONSUMER_POLLING: 10
            PAPERLESS_REDIS: redis://paperless-ngx-redis:6379
            PAPERLESS_DBENGINE: postgres
            PAPERLESS_DBHOST: paperless-ngx-postgres
            PAPERLESS_TIKA_ENABLED: 1
            PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-ngx-gotenberg:3000
            PAPERLESS_TIKA_ENDPOINT: http://paperless-ngx-tika:9998
            PAPERLESS_TIME_ZONE: "America/Los_Angeles"
    paperless-ai:
      containers:
        paperless-ai:
          nameOverride: paperless-ai
          image:
            repository: clusterzx/paperless-ai
            tag: 3.0.7
          env:
            RAG_SERVICE_ENABLED: true
            RAG_SERVICE_URL: http://localhost:8000
    redis:
      containers:
        redis:
          nameOverride: redis
          image:
            repository: redis
            tag: 7.4.5
    postgres:
      containers:
        postgres:
          nameOverride: postgres
          image:
            repository: postgres
            tag: 16.9
          env:
            PGDATA: "/var/lib/postgresql/data/pg_data"
            POSTGRES_DB: "paperless"
            # POSTGRES_PASSWORD: ""
            # POSTGRES_USER: ""
    tika:
      containers:
        tika:
          nameOverride: tika
          image:
            repository: docker.io/apache/tika
            tag: 3.2.1.0
    gotenberg:
      containers:
        gotenberg:
          nameOverride: gotenberg
          image:
            repository: docker.io/gotenberg/gotenberg
            tag: 8.20
          command:
            - "gotenberg"
            - "--chromium-disable-javascript=true"
            - "--chromium-allow-list=file:///tmp/.*"

  service:
    paperless:
      controller: paperless
      ports:
        http:
          port: 8000
    paperless-ai:
      controller: paperless-ai
      ports:
        http:
          port: 3000
    redis:
      controller: redis
      ports:
        http:
          port: 6379
    postgres:
      controller: postgres
      ports:
        http:
          port: 5432
    tika:
      controller: tika
      ports:
        http:
          port: 9998
    gotenberg:
      controller: gotenberg
      ports:
        http:
          port: 3000

  ingress:
    paperless:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/name: Paperless-ngx
        gethomepage.dev/description: Documents Manager
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Documents
        gethomepage.dev/icon: sh-paperless-ngx.png
        gethomepage.dev/pod-selector: "app.kubernetes.io/controller=paperless"
        nginx.ingress.kubernetes.io/proxy-body-size: 24m
        gethomepage.dev/weight: "1"
      hosts:
        - host: &paperless paperless.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: paperless
                port: http
      tls:
        - secretName: paperless-tls-cert
          hosts:
            - *paperless

    paperless-ai:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/name: Paperless-AI
        gethomepage.dev/description: Documents Analyzer
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Documents
        gethomepage.dev/icon: sh-paperless-ai.png
        gethomepage.dev/pod-selector: "app.kubernetes.io/controller=paperless-ai"
        gethomepage.dev/weight: "2"
      hosts:
        - host: &paperless-ai paperless-ai.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: paperless-ai
                port: http
      tls:
        - secretName: paperless-ai-tls-cert
          hosts:
            - *paperless-ai

  persistence:
    pg-data:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 4Gi
      advancedMounts:
        postgres:
          postgres:
            - path: /var/lib/postgresql/data
    media:
      enabled: true
      type: nfs
      server: 192.168.1.200
      path: /volume1/paperless/
      advancedMounts:
        paperless:
          paperless:
            - path: /usr/src/paperless/media
            - path: /usr/src/paperless/data
    consume:
      enabled: true
      type: nfs
      server: 192.168.1.200
      path: /volume1/scanned/
      advancedMounts:
        paperless:
          paperless:
            - path: /usr/src/paperless/consume
    export:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 4Gi
      advancedMounts:
        paperless:
          paperless:
            - path: /usr/src/paperless/export

    scripts:
      enabled: true
      type: configMap
      name: paperless-scripts
      advancedMounts:
        paperless:
          paperless:
            - path: /scripts/pre-consume.sh
              subPath: pre-consume.sh
              readOnly: false
            - path: /scripts/pwds.txt
              subPath: pwds.txt
              readOnly: true

    paperless-ai-data:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 4Gi
      advancedMounts:
        paperless-ai:
          paperless-ai:
            - path: /app/data
