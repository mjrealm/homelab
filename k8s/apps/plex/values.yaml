---
plex-media-server:
  fullnameOverride: "pms"

  # Specific node to install this
  nodeSelector:
    kubernetes.io/hostname: wayne
  extraEnv:
    HOSTNAME: "peacemaker-plex"
    TZ: "America/Los_Angeles"
    PLEX_UID: "1000"
    PLEX_GID: "1000"

  # Volume definition is in secrets file
  extraVolumeMounts:
    - mountPath: /data
      name: media-nfs
  extraVolumes:
    - name: media-nfs
      nfs:
        path: /volume1/media/
        server: 192.168.1.200

  # Config dir size
  pms:
    configStorage: 30Gi

  ingress:
    enabled: true
    ingressClassName: nginx
    url: https://plex.mdeleon.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      gethomepage.dev/name: Plex
      gethomepage.dev/description: Stream Movies and TV Shows
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Media
      gethomepage.dev/icon: plex.png
      gethomepage.dev/pod-selector: ""
      gethomepage.dev/weight: "1"

  # 1. Upload config file
  # kubectl cp pms.tgz plex/pms-0:/pms.tgz.up -c pms-pms-init
  # 2. Rename it to pms.tgz
  # kubectl exec -n plex --stdin pms-0 -c pms-pms-init h -- mv /pms.tgz.up /pms.tgz
  initContainer:
    script: |-
      #!/bin/sh
      echo "waiting for pre-existing pms database to be uploaded..."

      if [ -d "/config/Library" ]; then
        echo "PMS library already exists, exiting."
        exit 0
      fi

      # wait for the database archive to be manually copied to the server
      while [ ! -f /pms.tar ]; do sleep 2; done;

      tar -xvf /pms.tar -C /config
      rm pms.tar

      echo "Done."
