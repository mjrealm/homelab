---
app-template:
  defaultPodOptions:
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000

  controllers:
    main:
      strategy: Recreate
      containers:
        main:
          nameOverride: teamcity-server
          image:
            repository: jetbrains/teamcity-server
            tag: 2023.11.3
    agent:
      strategy: Recreate
      containers:
        main:
          nameOverride: teamcity-agent
          image:
            repository: jetbrains/teamcity-agent
            tag: 2023.11.3
          env:
            SERVER_URL: team-city.team-city.svc

  service:
    main:
      ports:
        http:
          port: 8111
    agent:
      controller: agent
      ports:
        tcp:
          port: 9090

  ingress:
    teamcity:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/name: TeamCity
        gethomepage.dev/description: CI/CD by Jetbrains
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: CI/CD
        gethomepage.dev/icon: teamcity.png
        gethomepage.dev/pod-selector: ""
      hosts:
        - host: &tc tc.mdeleon.dev
          paths:
            - path: /
              pathType: Prefix
              service:
                name: main
                port: http
      tls:
        - secretName: team-city-tls-cert
          hosts:
            - *tc

  persistence:
    server-data:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 5Gi
      advancedMounts:
        main:
          main:
            - path: /data/teamcity_server/datadir
    agent-conf:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 100Mi
      advancedMounts:
        agent:
          main:
            - path: /data/teamcity_agent/conf
    logs:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 5Gi
      globalMounts:
        - path: /opt/teamcity/logs
